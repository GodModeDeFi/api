@baseUrl = http://localhost:3000
# @baseUrl = https://tx.ionic.ninja

### TEST QUERY
GET {{baseUrl}}/beta/v0/ionic/market


### Health Check
GET {{baseUrl}}/


### Get Morpho Position
GET {{baseUrl}}/beta/v0/morpho/position/base/0x144bf18d6bf4c59602548a825034f73bf1d20177fc5f975fc69d5a5eba929b45/0x1155b614971f16758C92c4890eD338C9e3ede6b7
Content-Type: application/json

### Get All Morpho Markets
GET {{baseUrl}}/beta/v0/morpho/market/base
Content-Type: application/json

### Get Morpho Market Info by Market ID
GET {{baseUrl}}/beta/v0/morpho/market/base?marketId=0x144bf18d6bf4c59602548a825034f73bf1d20177fc5f975fc69d5a5eba929b45
Content-Type: application/json

### Get Morpho Market Info by Borrow Token Symbol
GET {{baseUrl}}/beta/v0/morpho/market/base?borrowTokenSymbol=WETH
Content-Type: application/json

### Get Morpho Market Info by Collateral Token Symbol
GET {{baseUrl}}/beta/v0/morpho/market/base?collateralTokenSymbol=wsuperOETHb
Content-Type: application/json

# Example Response:
# {
#   "markets": [
#     {
#       "marketId": "0x144bf18d6bf4c59602548a825034f73bf1d20177fc5f975fc69d5a5eba929b45",
#       "collateralToken": "0x7FcD174E80f264448ebeE8c88a7C4476AAF58Ea6",
#       "collateralTokenSymbol": "wsuperOETHb",
#       "borrowToken": "0x4200000000000000000000000000000000000006",
#       "borrowTokenSymbol": "WETH",
#       "utilization": "920000000000000000",
#       "liquidity": "23000000",
#       "apyAtTarget": "30000000000000000",
#       "borrowApy": "80000000000000000",
#       "totalSupplyAssets": "1000000000000000000",
#       "totalBorrowAssets": "500000000000000000"
#     }
#   ]
# }

# Available chains: optimism, base, mode, bob, fraxtal, lisk, ink, superseed, worldchain, swell, soneium

### Get All Ionic Markets
GET {{baseUrl}}/beta/v0/ionic/market/
Content-Type: application/json

### Get Ionic Market Info by Asset Symbol
GET {{baseUrl}}/beta/v0/ionic/market/optimism?asset=WETH
Content-Type: application/json

### Get Ionic Market Info by Market Address
GET {{baseUrl}}/beta/v0/ionic/market/optimism?address=0x1234567890123456789012345678901234567890
Content-Type: application/json

### Get Ionic Market Info by Pool Address
GET {{baseUrl}}/beta/v0/ionic/market/optimism?poolAddress=0x1234567890123456789012345678901234567890
Content-Type: application/json

### Get Ionic Market Info by Underlying Symbol
GET {{baseUrl}}/beta/v0/ionic/positions/base/0x1155b614971f16758C92c4890eD338C9e3ede6b7
Content-Type: application/json

### Get User Positions in Ionic Markets
GET {{baseUrl}}/beta/v0/ionic/positions/base/0x1155b614971f16758C92c4890eD338C9e3ede6b7
Content-Type: application/json

# Example Response:
# {
#   "pools": [
#     {
#       "name": "Main Pool",
#       "comptroller": "0x1234567890123456789012345678901234567890",
#       "assets": [
#         {
#           "underlyingDecimals": "18",
#           "underlyingBalance": "1000000000000000000",
#           "supplyRatePerBlock": "100000000000000",
#           "borrowRatePerBlock": "200000000000000",
#           "totalSupply": "10000000000000000000",
#           "totalBorrow": "5000000000000000000",
#           "supplyBalance": "1000000000000000000",
#           "borrowBalance": "500000000000000000",
#           "liquidity": "5000000000000000000",
#           "exchangeRate": "200000000000000000",
#           "underlyingPrice": "1500000000000000000",
#           "collateralFactor": "750000000000000000",
#           "reserveFactor": "100000000000000000",
#           "adminFee": "50000000000000000",
#           "ionicFee": "50000000000000000",
#           "cToken": "0x1234567890123456789012345678901234567890",
#           "rewards": [
#             {
#               "rewardToken": "0x1234567890123456789012345678901234567890",
#               "apy": "100000000000000000"
#             }
#           ]
#         }
#       ],
#       "healthFactor": "1500000000000000000"
#     }
#   ]
# }

### Supply to Ionic Pool
POST {{baseUrl}}/beta/v0/ionic/supply/optimism
Content-Type: application/json

{
  "sender": "0x1234567890123456789012345678901234567890",
  "call_data": {
    "asset": "WETH",
    "amount": 1.5,
    "on_behalf_of": "0x1234567890123456789012345678901234567890"
  }
}

# Example Response:
# {
#   "chainId": 10,
#   "data": "0x1234...",
#   "from": "0x1234567890123456789012345678901234567890",
#   "to": "0x1234567890123456789012345678901234567890",
#   "value": 0,
#   "nonce": 42,
#   "maxFeePerGas": 100000000000,
#   "maxPriorityFeePerGas": 1000000000
# }

### Withdraw from Ionic Pool
POST {{baseUrl}}/beta/v0/ionic/withdraw/optimism
Content-Type: application/json

{
  "sender": "0x1234567890123456789012345678901234567890",
  "call_data": {
    "asset": "WETH",
    "amount": 1.0,
    "on_behalf_of": "0x1234567890123456789012345678901234567890"
  }
}

# Example Response:
# {
#   "chainId": 10,
#   "data": "0x1234...",
#   "from": "0x1234567890123456789012345678901234567890",
#   "to": "0x1234567890123456789012345678901234567890",
#   "value": 0,
#   "nonce": 42,
#   "maxFeePerGas": 100000000000,
#   "maxPriorityFeePerGas": 1000000000
# }

### Borrow from Ionic Pool
POST {{baseUrl}}/beta/v0/ionic/borrow/optimism
Content-Type: application/json

{
  "sender": "0x1234567890123456789012345678901234567890",
  "call_data": {
    "asset": "WETH",
    "amount": 0.5,
    "on_behalf_of": "0x1234567890123456789012345678901234567890"
  }
}

# Example Response:
# {
#   "chainId": 10,
#   "data": "0x1234...",
#   "from": "0x1234567890123456789012345678901234567890",
#   "to": "0x1234567890123456789012345678901234567890",
#   "value": 0,
#   "nonce": 42,
#   "maxFeePerGas": 100000000000,
#   "maxPriorityFeePerGas": 1000000000
# }

### Repay to Ionic Pool
POST {{baseUrl}}/beta/v0/ionic/repay/optimism
Content-Type: application/json

{
  "sender": "0x1234567890123456789012345678901234567890",
  "call_data": {
    "asset": "WETH",
    "amount": 0.5,
    "on_behalf_of": "0x1234567890123456789012345678901234567890"
  }
}

# Example Response:
# {
#   "chainId": 10,
#   "data": "0x1234...",
#   "from": "0x1234567890123456789012345678901234567890",
#   "to": "0x1234567890123456789012345678901234567890",
#   "value": 0,
#   "nonce": 42,
#   "maxFeePerGas": 100000000000,
#   "maxPriorityFeePerGas": 1000000000
# }

### View API Documentation
GET {{baseUrl}}/api-docs
Content-Type: application/json

### Get All Morpho Positions
GET {{baseUrl}}/beta/v0/morpho/positions/base/0x1155b614971f16758C92c4890eD338C9e3ede6b7
Content-Type: application/json

# Example Response:
# {
#   "positions": [
#     {
#       "position": {
#         "user": "0x1155b614971f16758C92c4890eD338C9e3ede6b7",
#         "marketId": "0x144bf18d6bf4c59602548a825034f73bf1d20177fc5f975fc69d5a5eba929b45",
#         "supplyShares": "1000000000000000000",
#         "borrowShares": "500000000000000000",
#         "supplyAssets": "1000000000000000000",
#         "borrowAssets": "500000000000000000",
#         "collateral": "1000000000000000000",
#         "healthFactor": "1.5",
#         "isHealthy": true,
#         "market": {
#           "params": {
#             "collateralToken": "0x7FcD174E80f264448ebeE8c88a7C4476AAF58Ea6",
#             "loanToken": "0x4200000000000000000000000000000000000006",
#             "oracle": "0x...",
#             "irm": "0x...",
#             "lltv": "0.8",
#             "id": "0x144bf18d6bf4c59602548a825034f73bf1d20177fc5f975fc69d5a5eba929b45",
#             "liquidationIncentiveFactor": "0.1"
#           },
#           "totalSupplyAssets": "10000000000000000000",
#           "totalBorrowAssets": "5000000000000000000",
#           "totalSupplyShares": "10000000000000000000",
#           "totalBorrowShares": "5000000000000000000",
#           "lastUpdate": "1234567890",
#           "fee": "0.001",
#           "price": "1500000000000000000",
#           "rateAtTarget": "0.05"
#         }
#       }
#     }
#   ]
# }

#######################
### Portfolio API
#######################

### Get User Portfolio Across All Chains
GET {{baseUrl}}/beta/v0/portfolio/0x1155b614971f16758C92c4890eD338C9e3ede6b7
Content-Type: application/json

# Example Response:
# {
#   "total_value_usd": 2500.75,
#   "total_supply_usd": 3500.50,
#   "total_borrow_usd": 1000.25,
#   "protocols": [
#     {
#       "protocol": "Ionic",
#       "total_supply_usd": 2000.50,
#       "total_borrow_usd": 600.25,
#       "net_value_usd": 1400.25,
#       "positions": {
#         "base": [
#           {
#             "asset": "WETH",
#             "supply_balance": "0.5",
#             "supply_balance_usd": 800.50,
#             "borrow_balance": "0.2",
#             "borrow_balance_usd": 300.25,
#             "health_factor": "1.5"
#           }
#         ],
#         "mode": [
#           {
#             "asset": "WETH",
#             "supply_balance": "0.8",
#             "supply_balance_usd": 1200.00,
#             "borrow_balance": "0.2",
#             "borrow_balance_usd": 300.00,
#             "health_factor": "2.0"
#           }
#         ]
#       }
#     },
#     {
#       "protocol": "Morpho",
#       "total_supply_usd": 1500.00,
#       "total_borrow_usd": 400.00,
#       "net_value_usd": 1100.00,
#       "positions": {
#         "base": [
#           {
#             "asset": "WETH",
#             "supply_balance": "0.4",
#             "supply_balance_usd": 600.00,
#             "borrow_balance": "0.1",
#             "borrow_balance_usd": 150.00,
#             "health_factor": "2.5"
#           }
#         ],
#         "mode": [
#           {
#             "asset": "WETH",
#             "supply_balance": "0.6",
#             "supply_balance_usd": 900.00,
#             "borrow_balance": "0.17",
#             "borrow_balance_usd": 250.00,
#             "health_factor": "2.2"
#           }
#         ]
#       }
#     }
#   ]
# }

### Get User Portfolio by Chain
GET {{baseUrl}}/beta/v0/portfolio/0x1155b614971f16758C92c4890eD338C9e3ede6b7/mode
Content-Type: application/json

# Example Response:
# {
#   "total_value_usd": 1000.50,
#   "total_supply_usd": 1500.75,
#   "total_borrow_usd": 500.25,
#   "protocols": [
#     {
#       "protocol": "Ionic",
#       "total_supply_usd": 800.50,
#       "total_borrow_usd": 300.25,
#       "net_value_usd": 500.25,
#       "positions": {
#         "base": [
#           {
#             "asset": "WETH",
#             "supply_balance": "0.5",
#             "supply_balance_usd": 800.50,
#             "borrow_balance": "0.2",
#             "borrow_balance_usd": 300.25,
#             "health_factor": "1.5"
#           }
#         ]
#       }
#     }
#   ]
# }

#######################
### Morpho API
#######################

### Get All Morpho Markets
GET {{baseUrl}}/beta/v0/morpho/market/base
Content-Type: application/json

### Get Morpho Market Info by Market ID
GET {{baseUrl}}/beta/v0/morpho/market/base?marketId=0x144bf18d6bf4c59602548a825034f73bf1d20177fc5f975fc69d5a5eba929b45
Content-Type: application/json

### Get Morpho Market Info by Borrow Token Symbol
GET {{baseUrl}}/beta/v0/morpho/market/base?borrowTokenSymbol=WETH
Content-Type: application/json

### Get Morpho Market Info by Collateral Token Symbol
GET {{baseUrl}}/beta/v0/morpho/market/base?collateralTokenSymbol=wsuperOETHb
Content-Type: application/json

### Get All Morpho Positions
GET {{baseUrl}}/beta/v0/morpho/positions/base/0x1155b614971f16758C92c4890eD338C9e3ede6b7
Content-Type: application/json

### Get Morpho Position
GET {{baseUrl}}/beta/v0/morpho/position/base/0x144bf18d6bf4c59602548a825034f73bf1d20177fc5f975fc69d5a5eba929b45/0x1155b614971f16758C92c4890eD338C9e3ede6b7
Content-Type: application/json

#######################
### Ionic API
#######################

### Get All Ionic Markets
GET {{baseUrl}}/beta/v0/ionic/market/
Content-Type: application/json

### Get Ionic Market Info by Asset Symbol
GET {{baseUrl}}/beta/v0/ionic/market/optimism?asset=WETH
Content-Type: application/json

### Get Ionic Market Info by Market Address
GET {{baseUrl}}/beta/v0/ionic/market/optimism?address=0x1234567890123456789012345678901234567890
Content-Type: application/json

### Get Ionic Market Info by Pool Address
GET {{baseUrl}}/beta/v0/ionic/market/optimism?poolAddress=0x1234567890123456789012345678901234567890
Content-Type: application/json

### Get User Positions in Ionic Markets
GET {{baseUrl}}/beta/v0/ionic/positions/base/0x1155b614971f16758C92c4890eD338C9e3ede6b7
Content-Type: application/json

### Supply to Ionic Pool
POST {{baseUrl}}/beta/v0/ionic/supply/optimism
Content-Type: application/json

{
  "sender": "0x1234567890123456789012345678901234567890",
  "call_data": {
    "asset": "WETH",
    "amount": 1.5,
    "on_behalf_of": "0x1234567890123456789012345678901234567890"
  }
}

### Withdraw from Ionic Pool
POST {{baseUrl}}/beta/v0/ionic/withdraw/optimism
Content-Type: application/json

{
  "sender": "0x1234567890123456789012345678901234567890",
  "call_data": {
    "asset": "WETH",
    "amount": 1.0,
    "on_behalf_of": "0x1234567890123456789012345678901234567890"
  }
}

### Borrow from Ionic Pool
POST {{baseUrl}}/beta/v0/ionic/borrow/optimism
Content-Type: application/json

{
  "sender": "0x1234567890123456789012345678901234567890",
  "call_data": {
    "asset": "WETH",
    "amount": 0.5,
    "on_behalf_of": "0x1234567890123456789012345678901234567890"
  }
}

### Repay to Ionic Pool
POST {{baseUrl}}/beta/v0/ionic/repay/optimism
Content-Type: application/json

{
  "sender": "0x1234567890123456789012345678901234567890",
  "call_data": {
    "asset": "WETH",
    "amount": 0.5,
    "on_behalf_of": "0x1234567890123456789012345678901234567890"
  }
}

# Available chains: optimism, base, mode, bob, fraxtal, lisk, ink, superseed, worldchain, swell, soneium 